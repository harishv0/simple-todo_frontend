{"ast":null,"code":"var _jsxFileName = \"D:\\\\Advance Programming\\\\Simple_todo\\\\frontend\\\\src\\\\Component\\\\Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Todo.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [newtask, setnewtask] = useState(\"\");\n  const [datas, setDatas] = useState([]);\n  const add = async () => {\n    try {\n      if (newtask.length > 0) {\n        const response = await axios.post(`http://localhost:8080/api/task/addtask?taskname=${encodeURIComponent(newtask)}`);\n        console.log(response.data);\n        setDatas(prev => [...prev, newtask]);\n        setnewtask(\"\");\n      }\n    } catch (error) {\n      console.log(error.response.data);\n    }\n  };\n  const fetchTasks = async () => {\n    const response = await axios.get(\"http://localhost:8080/api/task/gettasks\");\n    console.log(response.data);\n    setDatas(response.data);\n  };\n  const handleDelete = async id => {\n    await axios.delete(`http://localhost:8080/api/task/deletetask/${id}`);\n    fetchTasks();\n  };\n  const handleMark = async id => {\n    const response = await axios.put(`http://localhost:8080/api/task/mark/${id}`);\n    console.log(response.data);\n    fetchTasks();\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo_container-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"todo_container-top-input\",\n          type: \"text\",\n          placeholder: \"Enter a task\",\n          value: newtask,\n          onChange: e => setnewtask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"todo_container-top-add\",\n          onClick: add,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"todo_page-middle\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), datas.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo_page-middle-tasks\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"task-content\",\n            children: item === null || item === void 0 ? void 0 : item.taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"task-mark\",\n            onClick: () => handleMark(item === null || item === void 0 ? void 0 : item.id),\n            children: \"Mark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"task-delete\",\n            onClick: () => handleDelete(item === null || item === void 0 ? void 0 : item.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"uF8pP5wTSxrRLI2OEILadUHyXUw=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Todo","_s","newtask","setnewtask","datas","setDatas","add","length","response","post","encodeURIComponent","console","log","data","prev","error","fetchTasks","get","handleDelete","id","delete","handleMark","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","class","map","item","index","taskName","_c","$RefreshReg$"],"sources":["D:/Advance Programming/Simple_todo/frontend/src/Component/Todo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Todo.css';\r\nimport axios from 'axios';\r\nconst Todo = () => {\r\n    const [newtask, setnewtask] = useState(\"\")\r\n    const [datas, setDatas] = useState([])\r\n    const add = async() => {\r\n        try {\r\n            if(newtask.length > 0){\r\n                const response = await axios.post(`http://localhost:8080/api/task/addtask?taskname=${encodeURIComponent(newtask)}`)\r\n                console.log(response.data);\r\n                setDatas(prev => [...prev, newtask])\r\n                setnewtask(\"\")\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response.data);\r\n            \r\n        }\r\n    }\r\n\r\n    const fetchTasks = async() => {\r\n        const response = await axios.get(\"http://localhost:8080/api/task/gettasks\")\r\n        console.log(response.data);\r\n        setDatas(response.data)\r\n    }\r\n\r\n    const handleDelete = async(id) => {\r\n        await axios.delete(`http://localhost:8080/api/task/deletetask/${id}`)\r\n        fetchTasks(); \r\n    }\r\n\r\n    const handleMark = async(id) => {\r\n        const response = await axios.put(`http://localhost:8080/api/task/mark/${id}`)\r\n        console.log(response.data);\r\n        fetchTasks();\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchTasks();\r\n    },[])\r\n\r\n\r\n\r\n  return (\r\n    <div className='todo'>\r\n        <h1>Simple Todo</h1>\r\n        <div className='todo_container'>\r\n            <div className='todo_container-top'>\r\n                <input className='todo_container-top-input' type=\"text\" placeholder='Enter a task' value={newtask} onChange={(e)=>setnewtask(e.target.value)}/>\r\n                <button className='todo_container-top-add' onClick={add}>Add</button>\r\n            </div>\r\n            <div class=\"todo_page-middle\">\r\n                <section>\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"all\">Completed</option>\r\n                    <option value=\"all\">Pending</option>\r\n                </section>\r\n                {\r\n                    datas.map((item,index)=>(\r\n                        <div className='todo_page-middle-tasks' key={index}>\r\n                            <p class=\"task-content\">{item?.taskName}</p>\r\n                            <button class=\"task-mark\" onClick={()=>handleMark(item?.id)}>Mark</button>\r\n                            <button class=\"task-delete\" onClick={()=>handleDelete(item?.id)}>Delete</button>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}